//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace CustomerPortalCMS.GeneratedModels
{
	// Mixin content Type 1109 with alias "pageInfoControls"
	/// <summary>Page Info Controls</summary>
	public partial interface IPageInfoControls : IPublishedContent
	{
		/// <summary>Is Impersonation Allowed</summary>
		bool IsImpersonationAllowed { get; }

		/// <summary>Page Title</summary>
		string PageTitle { get; }
	}

	/// <summary>Page Info Controls</summary>
	[PublishedContentModel("pageInfoControls")]
	public partial class PageInfoControls : PublishedContentModel, IPageInfoControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pageInfoControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PageInfoControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PageInfoControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Impersonation Allowed: Indicates whether this page allows for impersonation, or not.
		///</summary>
		[ImplementPropertyType("isImpersonationAllowed")]
		public bool IsImpersonationAllowed
		{
			get { return GetIsImpersonationAllowed(this); }
		}

		/// <summary>Static getter for Is Impersonation Allowed</summary>
		public static bool GetIsImpersonationAllowed(IPageInfoControls that) { return that.GetPropertyValue<bool>("isImpersonationAllowed"); }

		///<summary>
		/// Page Title: Enter the page title to be used, if left blank the page will be used
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for Page Title</summary>
		public static string GetPageTitle(IPageInfoControls that) { return that.GetPropertyValue<string>("pageTitle"); }
	}
}
